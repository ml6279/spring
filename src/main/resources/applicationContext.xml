<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
    http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-3.1.xsd"
       default-lazy-init="true"><!--default-lazy-init="true":全局懒加载-->

    <bean id="helloWorld" class="beans.HelloWorld"><!--lazy-init="true": 懒加载-->
        <property name="name">
            <value>吃饭了!!!</value>
        </property>
        <!--<property name="name" value="吃饭了!!!"></property>-->
    </bean>
    <!--通过构造方法来配置bean的属性-->
    <bean id="car" class="beans.Car">
        <constructor-arg value="Aodi" index="0"></constructor-arg>
        <constructor-arg value="ShangHai" index="1"></constructor-arg>
        <constructor-arg value="300000" type="double"></constructor-arg>
    </bean>
    <!--建议使用的方式-->
    <bean id="car2" class="beans.Car">
        <constructor-arg value="Baoma" type="java.lang.String"></constructor-arg>
        <constructor-arg value="ShangHai" type="java.lang.String"></constructor-arg>
        <constructor-arg value="250" type="int"></constructor-arg>
    </bean>


    <bean id="person" class="beans.Person">
        <property name="name" value="laoyang"></property>
        <property name="age" value="16"></property>
        <!--外部引用-->
        <!--<property name="car"><ref bean="car2"/></property>-->
        <!--直接引用-->
        <!--<property name="car" ref="car2"></property>
-->
        <!--内部bean 只能在这个bean中使用-->
        <property name="car">
            <bean class="beans.Car">
                <constructor-arg value="Ford"/>
                <constructor-arg value="Changan"/>
                <constructor-arg value="20000" type="double"/>
            </bean>
        </property>
    </bean>

    <bean id="person2" class="beans.Person">
        <constructor-arg value="laoliang"/>
        <constructor-arg value="25"/>
        <!--注入null-->
        <constructor-arg>
            <null></null>
        </constructor-arg>
        <!-- <constructor-arg ref="car"/>
         &lt;!&ndash;级联赋值,注意:属性需要先初始化才可以级联赋值,否则会有异常&ndash;&gt;
         <property name="car.maxSpeed" value="250"/>-->
    </bean>

    <!--List-->
    <bean id="person3" class="beans.collection.Person">
        <property name="name" value="laoyang"/>
        <property name="age" value="16"/>
        <property name="cars">
            <list>
                <ref bean="car"/>
                <ref bean="car2"/>
                <bean class="beans.Car">
                    <constructor-arg value="Ford"/>
                    <constructor-arg value="changan"/>
                    <constructor-arg value="200000"/>
                </bean>
            </list>
        </property>
    </bean>

    <!--Map-->
    <bean id="NewPerson" class="beans.collection.NewPerson">
        <property name="name" value="laoyang"/>
        <property name="age" value="16"/>
        <property name="cars">
            <!--使用map节点的entry子节点-->
            <map>
                <entry key="AA" value-ref="car"/>
                <entry key="BB" value-ref="car2"/>
            </map>
        </property>
    </bean>

    <bean id="dataSource" class="beans.collection.DataSource">
        <property name="properties">
            <props>
                <prop key="user">root</prop>
                <prop key="password">1234</prop>
                <prop key="url">jdbc:mysql:///test</prop>
                <prop key="driverClass">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>

    <!--给属性注入值-->
    <bean id="person5" class="beans.Person"
          p:age="30" p:name="Queen" p:car-ref="car"></bean>
    <util:list id="cars">
        <ref bean="car"/>
        <ref bean="car2"/>
    </util:list>

    <bean id="person6" class="beans.collection.Person" p:age="30" p:name="Queen" p:cars-ref="cars"></bean>

    <bean id="person7" class="beans.collection.Person">
        <property name="name" value="laoyang"/>
        <property name="age" value="16"/>
        <property name="cars" ref="cars"/>
    </bean>

    <bean id="other" class="beans.Other" init-method="init" destroy-method="destory"></bean>

    <!--测试单列模式和多例模式-->
    <!--prototype 多例模式-->
    <bean id="scopeBean" class="beans.ScopeBean" scope="prototype"></bean>
    <!--singleton 单例模式 默认是单例模式-->
    <bean id="scopeBean1" class="beans.ScopeBean" scope="singleton"></bean>

    <!--三层模式bean的配置-->
    <!--dao-->
    <bean id="threeDao" class="beans.Dao"></bean>
    <!--service-->
    <bean id="threeService" class="beans.Service">
        <property name="dao" ref="threeDao"/>
    </bean>
    <!--controller-->
    <bean id="threeController" class="beans.Controller">
        <property name="service" ref="threeService"/>
    </bean>

</beans>
